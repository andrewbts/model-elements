/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements_base;  
@SuppressWarnings("all")
public class FreewayStatisticsHistoryReport extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FreewayStatisticsHistoryReport\",\"namespace\":\"edu.berkeley.path.model_elements_base\",\"fields\":[{\"name\":\"startTime\",\"type\":{\"type\":\"record\",\"name\":\"DateTime\",\"doc\":\"milliseconds, absolute, since epoch, utc\",\"fields\":[{\"name\":\"milliseconds\",\"type\":\"long\"}]}},{\"name\":\"forecastDuration\",\"type\":{\"type\":\"record\",\"name\":\"Duration\",\"doc\":\"milliseconds\",\"fields\":[{\"name\":\"milliseconds\",\"type\":\"long\"}]}},{\"name\":\"dt\",\"type\":\"Duration\"},{\"name\":\"mean\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FreewayCTMState\",\"doc\":\"* State of entire CTM, comprising:\\n   * state of each link,\\n   * state of each origin queue, and\\n   * optionally the in- and out-flows of each link.\",\"fields\":[{\"name\":\"linkState\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"FreewayLinkState\",\"doc\":\"* State of one link at one time.\\n   *\\n   * May contain density, velocity, or both.\",\"fields\":[{\"name\":\"density\",\"type\":[\"double\",\"null\"]},{\"name\":\"velocity\",\"type\":[\"double\",\"null\"]}]},\"avro.java.string\":\"String\"},\"doc\":\"map key is link id\"},{\"name\":\"queueLength\",\"type\":{\"type\":\"map\",\"values\":\"double\",\"avro.java.string\":\"String\"},\"doc\":\"map key is origin link id\"},{\"name\":\"linkFlowState\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"FreewayLinkFlowState\",\"doc\":\"* In- and out-flow state of one link at one time.\\n   *\\n   * The in- and out-flows are a quantity of interest computed by a CTM,\\n   * though not needed for either estimation of future time steps of a CTM.\",\"fields\":[{\"name\":\"inFlow\",\"type\":\"double\"},{\"name\":\"outFlow\",\"type\":\"double\"}]},\"avro.java.string\":\"String\"}],\"doc\":\"map key is link id\"}]}}},{\"name\":\"stdDev\",\"type\":{\"type\":\"array\",\"items\":\"FreewayCTMState\"}}]}");
  @Deprecated public edu.berkeley.path.model_elements_base.DateTime startTime;
  @Deprecated public edu.berkeley.path.model_elements_base.Duration forecastDuration;
  @Deprecated public edu.berkeley.path.model_elements_base.Duration dt;
  @Deprecated public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> mean;
  @Deprecated public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> stdDev;

  /**
   * Default constructor.
   */
  public FreewayStatisticsHistoryReport() {}

  /**
   * All-args constructor.
   */
  public FreewayStatisticsHistoryReport(edu.berkeley.path.model_elements_base.DateTime startTime, edu.berkeley.path.model_elements_base.Duration forecastDuration, edu.berkeley.path.model_elements_base.Duration dt, java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> mean, java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> stdDev) {
    this.startTime = startTime;
    this.forecastDuration = forecastDuration;
    this.dt = dt;
    this.mean = mean;
    this.stdDev = stdDev;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return startTime;
    case 1: return forecastDuration;
    case 2: return dt;
    case 3: return mean;
    case 4: return stdDev;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: startTime = (edu.berkeley.path.model_elements_base.DateTime)value$; break;
    case 1: forecastDuration = (edu.berkeley.path.model_elements_base.Duration)value$; break;
    case 2: dt = (edu.berkeley.path.model_elements_base.Duration)value$; break;
    case 3: mean = (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>)value$; break;
    case 4: stdDev = (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'startTime' field.
   */
  public edu.berkeley.path.model_elements_base.DateTime getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(edu.berkeley.path.model_elements_base.DateTime value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'forecastDuration' field.
   */
  public edu.berkeley.path.model_elements_base.Duration getForecastDuration() {
    return forecastDuration;
  }

  /**
   * Sets the value of the 'forecastDuration' field.
   * @param value the value to set.
   */
  public void setForecastDuration(edu.berkeley.path.model_elements_base.Duration value) {
    this.forecastDuration = value;
  }

  /**
   * Gets the value of the 'dt' field.
   */
  public edu.berkeley.path.model_elements_base.Duration getDt() {
    return dt;
  }

  /**
   * Sets the value of the 'dt' field.
   * @param value the value to set.
   */
  public void setDt(edu.berkeley.path.model_elements_base.Duration value) {
    this.dt = value;
  }

  /**
   * Gets the value of the 'mean' field.
   */
  public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> getMean() {
    return mean;
  }

  /**
   * Sets the value of the 'mean' field.
   * @param value the value to set.
   */
  public void setMean(java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> value) {
    this.mean = value;
  }

  /**
   * Gets the value of the 'stdDev' field.
   */
  public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> getStdDev() {
    return stdDev;
  }

  /**
   * Sets the value of the 'stdDev' field.
   * @param value the value to set.
   */
  public void setStdDev(java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> value) {
    this.stdDev = value;
  }

  /** Creates a new FreewayStatisticsHistoryReport RecordBuilder */
  public static edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder newBuilder() {
    return new edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder();
  }
  
  /** Creates a new FreewayStatisticsHistoryReport RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder newBuilder(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder other) {
    return new edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder(other);
  }
  
  /** Creates a new FreewayStatisticsHistoryReport RecordBuilder by copying an existing FreewayStatisticsHistoryReport instance */
  public static edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder newBuilder(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport other) {
    return new edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder(other);
  }
  
  /**
   * RecordBuilder for FreewayStatisticsHistoryReport instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FreewayStatisticsHistoryReport>
    implements org.apache.avro.data.RecordBuilder<FreewayStatisticsHistoryReport> {

    private edu.berkeley.path.model_elements_base.DateTime startTime;
    private edu.berkeley.path.model_elements_base.Duration forecastDuration;
    private edu.berkeley.path.model_elements_base.Duration dt;
    private java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> mean;
    private java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> stdDev;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FreewayStatisticsHistoryReport instance */
    private Builder(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport other) {
            super(edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.SCHEMA$);
      if (isValidValue(fields()[0], other.startTime)) {
        this.startTime = (edu.berkeley.path.model_elements_base.DateTime) data().deepCopy(fields()[0].schema(), other.startTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.forecastDuration)) {
        this.forecastDuration = (edu.berkeley.path.model_elements_base.Duration) data().deepCopy(fields()[1].schema(), other.forecastDuration);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dt)) {
        this.dt = (edu.berkeley.path.model_elements_base.Duration) data().deepCopy(fields()[2].schema(), other.dt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mean)) {
        this.mean = (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>) data().deepCopy(fields()[3].schema(), other.mean);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stdDev)) {
        this.stdDev = (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>) data().deepCopy(fields()[4].schema(), other.stdDev);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'startTime' field */
    public edu.berkeley.path.model_elements_base.DateTime getStartTime() {
      return startTime;
    }
    
    /** Sets the value of the 'startTime' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder setStartTime(edu.berkeley.path.model_elements_base.DateTime value) {
      validate(fields()[0], value);
      this.startTime = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'startTime' field has been set */
    public boolean hasStartTime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'startTime' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.Duration getForecastDuration() {
      return forecastDuration;
    }
    
    /** Sets the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder setForecastDuration(edu.berkeley.path.model_elements_base.Duration value) {
      validate(fields()[1], value);
      this.forecastDuration = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'forecastDuration' field has been set */
    public boolean hasForecastDuration() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder clearForecastDuration() {
      forecastDuration = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'dt' field */
    public edu.berkeley.path.model_elements_base.Duration getDt() {
      return dt;
    }
    
    /** Sets the value of the 'dt' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder setDt(edu.berkeley.path.model_elements_base.Duration value) {
      validate(fields()[2], value);
      this.dt = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'dt' field has been set */
    public boolean hasDt() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'dt' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder clearDt() {
      dt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'mean' field */
    public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> getMean() {
      return mean;
    }
    
    /** Sets the value of the 'mean' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder setMean(java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> value) {
      validate(fields()[3], value);
      this.mean = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'mean' field has been set */
    public boolean hasMean() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'mean' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder clearMean() {
      mean = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'stdDev' field */
    public java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> getStdDev() {
      return stdDev;
    }
    
    /** Sets the value of the 'stdDev' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder setStdDev(java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState> value) {
      validate(fields()[4], value);
      this.stdDev = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'stdDev' field has been set */
    public boolean hasStdDev() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'stdDev' field */
    public edu.berkeley.path.model_elements_base.FreewayStatisticsHistoryReport.Builder clearStdDev() {
      stdDev = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public FreewayStatisticsHistoryReport build() {
      try {
        FreewayStatisticsHistoryReport record = new FreewayStatisticsHistoryReport();
        record.startTime = fieldSetFlags()[0] ? this.startTime : (edu.berkeley.path.model_elements_base.DateTime) defaultValue(fields()[0]);
        record.forecastDuration = fieldSetFlags()[1] ? this.forecastDuration : (edu.berkeley.path.model_elements_base.Duration) defaultValue(fields()[1]);
        record.dt = fieldSetFlags()[2] ? this.dt : (edu.berkeley.path.model_elements_base.Duration) defaultValue(fields()[2]);
        record.mean = fieldSetFlags()[3] ? this.mean : (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>) defaultValue(fields()[3]);
        record.stdDev = fieldSetFlags()[4] ? this.stdDev : (java.util.List<edu.berkeley.path.model_elements_base.FreewayCTMState>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
