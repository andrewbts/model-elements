/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements_base;  
@SuppressWarnings("all")
/** * config specific to estimation-forecast runs in which "prediction" CTMs
   * are spun off from the latest Estimated state periodically */
public class EstimationForecastConfig extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EstimationForecastConfig\",\"namespace\":\"edu.berkeley.path.model_elements_base\",\"doc\":\"* config specific to estimation-forecast runs in which \\\"prediction\\\" CTMs\\n   * are spun off from the latest Estimated state periodically\",\"fields\":[{\"name\":\"dtEstimationForecastSpinoff\",\"type\":{\"type\":\"record\",\"name\":\"Duration\",\"doc\":\"milliseconds\",\"fields\":[{\"name\":\"milliseconds\",\"type\":\"long\"}]}},{\"name\":\"forecastDuration\",\"type\":\"Duration\"},{\"name\":\"dtEstimationForecastReport\",\"type\":\"Duration\"}]}");
  @Deprecated public edu.berkeley.path.model_elements_base.Duration dtEstimationForecastSpinoff;
  @Deprecated public edu.berkeley.path.model_elements_base.Duration forecastDuration;
  @Deprecated public edu.berkeley.path.model_elements_base.Duration dtEstimationForecastReport;

  /**
   * Default constructor.
   */
  public EstimationForecastConfig() {}

  /**
   * All-args constructor.
   */
  public EstimationForecastConfig(edu.berkeley.path.model_elements_base.Duration dtEstimationForecastSpinoff, edu.berkeley.path.model_elements_base.Duration forecastDuration, edu.berkeley.path.model_elements_base.Duration dtEstimationForecastReport) {
    this.dtEstimationForecastSpinoff = dtEstimationForecastSpinoff;
    this.forecastDuration = forecastDuration;
    this.dtEstimationForecastReport = dtEstimationForecastReport;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dtEstimationForecastSpinoff;
    case 1: return forecastDuration;
    case 2: return dtEstimationForecastReport;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dtEstimationForecastSpinoff = (edu.berkeley.path.model_elements_base.Duration)value$; break;
    case 1: forecastDuration = (edu.berkeley.path.model_elements_base.Duration)value$; break;
    case 2: dtEstimationForecastReport = (edu.berkeley.path.model_elements_base.Duration)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dtEstimationForecastSpinoff' field.
   */
  public edu.berkeley.path.model_elements_base.Duration getDtEstimationForecastSpinoff() {
    return dtEstimationForecastSpinoff;
  }

  /**
   * Sets the value of the 'dtEstimationForecastSpinoff' field.
   * @param value the value to set.
   */
  public void setDtEstimationForecastSpinoff(edu.berkeley.path.model_elements_base.Duration value) {
    this.dtEstimationForecastSpinoff = value;
  }

  /**
   * Gets the value of the 'forecastDuration' field.
   */
  public edu.berkeley.path.model_elements_base.Duration getForecastDuration() {
    return forecastDuration;
  }

  /**
   * Sets the value of the 'forecastDuration' field.
   * @param value the value to set.
   */
  public void setForecastDuration(edu.berkeley.path.model_elements_base.Duration value) {
    this.forecastDuration = value;
  }

  /**
   * Gets the value of the 'dtEstimationForecastReport' field.
   */
  public edu.berkeley.path.model_elements_base.Duration getDtEstimationForecastReport() {
    return dtEstimationForecastReport;
  }

  /**
   * Sets the value of the 'dtEstimationForecastReport' field.
   * @param value the value to set.
   */
  public void setDtEstimationForecastReport(edu.berkeley.path.model_elements_base.Duration value) {
    this.dtEstimationForecastReport = value;
  }

  /** Creates a new EstimationForecastConfig RecordBuilder */
  public static edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder newBuilder() {
    return new edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder();
  }
  
  /** Creates a new EstimationForecastConfig RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder newBuilder(edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder other) {
    return new edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder(other);
  }
  
  /** Creates a new EstimationForecastConfig RecordBuilder by copying an existing EstimationForecastConfig instance */
  public static edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder newBuilder(edu.berkeley.path.model_elements_base.EstimationForecastConfig other) {
    return new edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder(other);
  }
  
  /**
   * RecordBuilder for EstimationForecastConfig instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EstimationForecastConfig>
    implements org.apache.avro.data.RecordBuilder<EstimationForecastConfig> {

    private edu.berkeley.path.model_elements_base.Duration dtEstimationForecastSpinoff;
    private edu.berkeley.path.model_elements_base.Duration forecastDuration;
    private edu.berkeley.path.model_elements_base.Duration dtEstimationForecastReport;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements_base.EstimationForecastConfig.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing EstimationForecastConfig instance */
    private Builder(edu.berkeley.path.model_elements_base.EstimationForecastConfig other) {
            super(edu.berkeley.path.model_elements_base.EstimationForecastConfig.SCHEMA$);
      if (isValidValue(fields()[0], other.dtEstimationForecastSpinoff)) {
        this.dtEstimationForecastSpinoff = (edu.berkeley.path.model_elements_base.Duration) data().deepCopy(fields()[0].schema(), other.dtEstimationForecastSpinoff);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.forecastDuration)) {
        this.forecastDuration = (edu.berkeley.path.model_elements_base.Duration) data().deepCopy(fields()[1].schema(), other.forecastDuration);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.dtEstimationForecastReport)) {
        this.dtEstimationForecastReport = (edu.berkeley.path.model_elements_base.Duration) data().deepCopy(fields()[2].schema(), other.dtEstimationForecastReport);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'dtEstimationForecastSpinoff' field */
    public edu.berkeley.path.model_elements_base.Duration getDtEstimationForecastSpinoff() {
      return dtEstimationForecastSpinoff;
    }
    
    /** Sets the value of the 'dtEstimationForecastSpinoff' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder setDtEstimationForecastSpinoff(edu.berkeley.path.model_elements_base.Duration value) {
      validate(fields()[0], value);
      this.dtEstimationForecastSpinoff = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'dtEstimationForecastSpinoff' field has been set */
    public boolean hasDtEstimationForecastSpinoff() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'dtEstimationForecastSpinoff' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder clearDtEstimationForecastSpinoff() {
      dtEstimationForecastSpinoff = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.Duration getForecastDuration() {
      return forecastDuration;
    }
    
    /** Sets the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder setForecastDuration(edu.berkeley.path.model_elements_base.Duration value) {
      validate(fields()[1], value);
      this.forecastDuration = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'forecastDuration' field has been set */
    public boolean hasForecastDuration() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'forecastDuration' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder clearForecastDuration() {
      forecastDuration = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'dtEstimationForecastReport' field */
    public edu.berkeley.path.model_elements_base.Duration getDtEstimationForecastReport() {
      return dtEstimationForecastReport;
    }
    
    /** Sets the value of the 'dtEstimationForecastReport' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder setDtEstimationForecastReport(edu.berkeley.path.model_elements_base.Duration value) {
      validate(fields()[2], value);
      this.dtEstimationForecastReport = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'dtEstimationForecastReport' field has been set */
    public boolean hasDtEstimationForecastReport() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'dtEstimationForecastReport' field */
    public edu.berkeley.path.model_elements_base.EstimationForecastConfig.Builder clearDtEstimationForecastReport() {
      dtEstimationForecastReport = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public EstimationForecastConfig build() {
      try {
        EstimationForecastConfig record = new EstimationForecastConfig();
        record.dtEstimationForecastSpinoff = fieldSetFlags()[0] ? this.dtEstimationForecastSpinoff : (edu.berkeley.path.model_elements_base.Duration) defaultValue(fields()[0]);
        record.forecastDuration = fieldSetFlags()[1] ? this.forecastDuration : (edu.berkeley.path.model_elements_base.Duration) defaultValue(fields()[1]);
        record.dtEstimationForecastReport = fieldSetFlags()[2] ? this.dtEstimationForecastReport : (edu.berkeley.path.model_elements_base.Duration) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
